@page "/"
@using CraftmanshipBlog.Models
@inject IJSRuntime Js;
<section class="presentation">
    <div class="content">
        <h1 class="heading-primary">Benazet Vincent</h1>
        <div class="info">
            <p class="text-primary">
                Ingénieur .Net full stack. Passionné en développement
                et en architecture avec une expertise technique en constante
                progression.
            </p>
        </div>
    </div>
    <div class="socials">
        <div>
            <a href="https://linkedin.com/in/" class="social-icon-link" rel="noreferrer" target="_blank">
                <img src="linkedin-dark.svg" alt="Benazet Vincent Linkedin Profile" class="social-icon">
            </a>
        </div>
        <div>
            <a href="https://github.com/" class="social-icon-link" rel="noreferrer" target="_blank">
                <img src="github-dark.svg" alt="Benazet Vincent Github Profile" class="social-icon">
            </a>
        </div>
    </div>
    <div class="mouse-scroll-cont">
        <div class="mouse"></div>
    </div>
</section>
<section id="about" class="about sec-pad">
    <div class="main-container">
        @if (_opportunity != null)
        {
            <Experience ExperienceItem="_opportunity"/>
        }
    </div>
</section>

@code{

    ExperienceItem _opportunity = null;
    
    protected override void OnInitialized()
    {
        _opportunity = new()
        {
            Date = "JUIN 2023 – MAINTENANT",
            Enterprise = "OPPORTUNITY",
            Poste = "Architect logiciel",
            Items = new Dictionary<string, List<string>>()
            {
                {"Découpage du monolith en domaine", new List<string>() {"EventStorming", "Identification des sous domaines"}},
                {"Mise en place des micro-services", new List<string>() {"Database par service", "Circuit Breaker", "EventOutbox", "MassTransit"}},
                {"Utilisation d'AWS", new List<string>() {"AmazonMQ - RabbitMQ", "AWS AppConfig", "SecretManager", "S3"}},
                {"Observabilité", new List<string>() {"OpenTelemetry (Sidecar Otel Collector)", "Datagog", "Logging", "Tracing", "Monitoring", "Alerting"}},
            }
        };
    }
    

}